# -*- coding: utf-8 -*-
"""Practica2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c5VFld6AFpRc74P56W0r_aho1RmGJ-rI
"""

from google.colab import files

uploaded = files.upload()

#PUNT 1

data = pd.read_csv("adult_v1.csv")

#class
workclass = data["workclass"].values
#educacio
education = data["education"].values
#stauts 
marital_status = data["marital-status"].values
#ocupacio
occupation = data["occupation"].values
#relacio
relationship = data["relationship"].values
#rassa
race = data["race"].values
#genere / sexe
gender = data["gender"].values
# hores treballades
hours_per_week =data["hours-per-week"].values


#print(workclass)
#print(education)
#print(marital_status)
#print(occupation)
#print(race)
#print(gender)
#print(hours_per_week)


gender.sort()

numHombres = 0
numDones =0

#print(gender)

for row in gender:
  if row =='Male':
    numHombres= numHombres+1
  elif row == 'Female':
    numDones = numDones +1




x = ["Male","Female"]
y = [numHombres,numDones]

print("Barras")
plt.bar(x,y)
plt.show()


# grafic




print("grafic")

plt.pie(y, labels=x, autopct="%0.1f %%")
plt.axis("equal")
plt.show()

print("TAULA")
data_table.enable_dataframe_formatter()

info =  [[numHombres,numDones]]


col_names = ["Homes","Dones"]

print(tabulate(info, headers = col_names))

from google.colab import data_table
from tabulate import tabulate
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd 

data = pd.read_csv("adult_v1.csv") #LLEGIR DEL FITXER


#material status MENOS = 50  k

never_married= 0
married_ci_spouse =0
widowed =0 
separated =0
divorced =0

for row in range(len(data["marital-status"])):  
    if data["marital-status"][row] == "Never-married" and data["income"][row] == "<=50K":
      never_married = never_married + 1
      

for row in range(len(data["marital-status"])):     
    if data["marital-status"][row] == "Married-ci-spouse" and data["income"][row] == "<=50K":
      married_ci_spouse = married_ci_spouse + 1

for row in range(len(data["marital-status"])):     
    if data["marital-status"][row] == "Widowed" and data["income"][row] == "<=50K":
      widowed = widowed + 1
    
for row in range(len(data["marital-status"])):     
    if data["marital-status"][row] == "Separated" and data["income"][row] == "<=50K":
      separated = separated + 1

for row in range(len(data["marital-status"])): 
  if data["marital-status"][row] =="Divorced" and data["income"][row] == "<=50K":
      divorced = divorced +1

# MES 50 K 
never_married_mes= 0
married_ci_spouse_mes =0
widowed_mes =0 
separated_mes =0
divorced_mes =0

for row in range(len(data["marital-status"])):  
    if data["marital-status"][row] == "Never-married" and data["income"][row] == ">50K":
      never_married_mes = never_married_mes + 1
      
for row in range(len(data["marital-status"])):     
    if data["marital-status"][row] == "Widowed" and data["income"][row] == ">50K":
      widowed_mes = widowed_mes + 1

for row in range(len(data["marital-status"])):     
    if data["marital-status"][row] == "Married-ci-spouse" and data["income"][row] == ">50K":
      married_ci_spouse_mes = married_ci_spouse_mes + 1
    
for row in range(len(data["marital-status"])):     
    if data["marital-status"][row] == "Separated" and data["income"][row] == ">50K":
      separated_mes = separated_mes + 1

for row in range(len(data["marital-status"])): 
  if data["marital-status"][row] =="Divorced" and data["income"][row] == ">50K":
      divorced_mes = divorced_mes +1


 

x = ["Never-married","Married-ci-spouse","Widowed","Separated","Divorced"]
y = [never_married,married_ci_spouse,widowed,separated,divorced]
y2 = [never_married_mes,married_ci_spouse_mes,widowed_mes,separated_mes,divorced_mes]

# grafic

print("Grafic Estat Civil <=50k")

plt.pie(y, labels=x, autopct="%0.1f %%")
plt.axis("equal") 
plt.show()


print()
print()

print("Grafic Estat Civil >50k")

plt.pie(y2, labels=x, autopct="%0.1f %%")
plt.axis("equal") 
plt.show()

#RACES + 50K <=50K


from google.colab import data_table
from tabulate import tabulate
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd 
data = pd.read_csv("adult_v1.csv")

black_menys_igual_50 = 0
white_menys_igual_50 = 0
assianPacIslander_menys_igual_50 = 0
other_menys_igual_50 = 0

black_mes_50 = 0
white_mes_50 = 0
assianPacIslander_mes_50 = 0
other_mes_50 = 0





for row in range(len(data["race"])):  
    if data["race"][row] == "Black" and data["income"][row] == "<=50K":
      black_menys_igual_50 = black_menys_igual_50 + 1

for row in range(len(data["race"])):     
    if data["race"][row] == "White" and data["income"][row] == "<=50K":
      white_menys_igual_50 = white_menys_igual_50 + 1

for row in range(len(data["race"])):  
    if data["race"][row] == "Asian-Pac-Islander" and data["income"][row] == "<=50K":
      assianPacIslander_menys_igual_50 = assianPacIslander_menys_igual_50 + 1

for row in range(len(data["race"])):
    if data["race"][row] == "Other" and data["income"][row] == "<=50K":
      other_menys_igual_50 = other_menys_igual_50 + 1


#PERSONEES MES DE 50K
for row in range(len(data["race"])):  
    if data["race"][row] == "Black" and data["income"][row] == ">50K":
      black_mes_50 = black_mes_50 + 1

for row in range(len(data["race"])):  
    if data["race"][row] == "White" and data["income"][row] == ">50K":
      white_mes_50 = white_mes_50 + 1

for row in range(len(data["race"])):  
    if data["race"][row] == "Asian-Pac-Islander" and data["income"][row] == ">50K":
      assianPacIslander_mes_50 = assianPacIslander_mes_50 + 1

for row in range(len(data["race"])):  
    if data["race"][row] == "Other" and data["income"][row] == ">50K":
      other_mes_50 = other_mes_50 + 1

x = ["Black","White","Asian-Pac-Islander","Other"]
y = [black_menys_igual_50,white_menys_igual_50,assianPacIslander_menys_igual_50,other_menys_igual_50]

print("Barras rasa menys o igual a 50K: ")
plt.bar(x,y)
plt.show()

x1 = ["Black","White","Asian-Pac-Islander","Other"]
y1 = [black_mes_50,white_mes_50,assianPacIslander_mes_50,other_mes_50]

print("Barras rasa mes de 50k: ")
plt.bar(x1,y1)
plt.show()

#taula  >=50K
print("TAULA Menys igual 50k")
data_table.enable_dataframe_formatter()

info =  [[black_menys_igual_50,white_menys_igual_50,assianPacIslander_menys_igual_50,other_menys_igual_50]]


col_names =  ["Black","White","Asian-Pac-Islander","Other"]

print(tabulate(info, headers = col_names))
print("")
print("")
#taula  mes 50K
print("TAULA MES  50k")
data_table.enable_dataframe_formatter()

info =  [[black_mes_50,white_mes_50,assianPacIslander_mes_50,other_mes_50]]


col_names =  ["Black","White","Asian-Pac-Islander","Other"]

print(tabulate(info, headers = col_names))


print("GRAFIC MENYS IGUAL 50 K")

plt.pie(y, labels=x, autopct="%0.1f %%")
plt.axis("equal")
plt.show()


print()

print("GRAFIC MES DE 50 K")

plt.pie(y1, labels=x1, autopct="%0.1f %%")
plt.axis("equal")
plt.show()

# GRAFICO empresas  mes 50k 
num_privats_mes = 0
locals_mes =0
self_emp_mes =0
state_gov_mes= 0
federal_gov_mes =0  


#mas50k
#private
for row in range(len(data["workclass"] )):  
    if data["workclass"][row] == "Private" and data["income"][row] == ">50K":
     num_privats_mes = num_privats_mes +1
#locals
for row in range(len(data["workclass"])):  
    if data["workclass"][row] == "Local-gov" and data["income"][row] == ">50K": 
     locals_mes = locals_mes +1
#self_emp
for row in range(len(data["workclass"])):  
    if data["workclass"][row] == "Self-emp-not-inc" and data["income"][row] == ">50K":
      self_emp_mes = self_emp_mes +1
#state gov
for row in range(len(data["workclass"])):  
    if data["workclass"][row] == "State-gov" and data["income"][row] == ">50K":
      state_gov_mes = state_gov_mes +1

#federal_gov
for row in range(len(data["workclass"])):  
    if data["workclass"][row] == "Federal-gov" and data["income"][row] == ">50K":
      federal_gov_mes = federal_gov_mes +1



# grafic

print("GRAFIC MES 50K EMPRESES")

x = ["Private","Local-gov","Self-emp-not-inc","State-gov","Federal-gov"]
y = [num_privats_mes,locals_mes,self_emp_mes,state_gov_mes,federal_gov_mes]

plt.pie(y, labels=x, autopct="%0.1f %%")
plt.axis("equal")
plt.show()

#print(num_privats)
#print(locals)
#print(self_emp)
#print(state_gov)
#print(federal_gov)

print("")

#taula  empreses
print("TAULA Empresse")
data_table.enable_dataframe_formatter()

info =  [[num_privats_mes,locals_mes,self_emp_mes,state_gov_mes,federal_gov_mes]]


col_names =  ["Private","Local-gov","Self-emp-not-inc","State-gov","Federal-gov"]

print(tabulate(info, headers = col_names))





# GRAFICO empresas 
num_privats = 0
locals =0
self_emp =0
state_gov= 0
federal_gov =0  


#MENOS DE  50K
#private
for row in range(len(data["workclass"] )):  
    if data["workclass"][row] == "Private" and data["income"][row] == "<=50K":
     num_privats = num_privats +1
#locals
for row in range(len(data["workclass"])):  
    if data["workclass"][row] == "Local-gov" and data["income"][row] == "<=50K": 
     locals = locals +1
#self_emp
for row in range(len(data["workclass"])):  
    if data["workclass"][row] == "Self-emp-not-inc" and data["income"][row] == "<=50K":
      self_emp = self_emp +1
#state gov
for row in range(len(data["workclass"])):  
    if data["workclass"][row] == "State-gov" and data["income"][row] == "<=50K":
      state_gov = state_gov +1

#federal_gov
for row in range(len(data["workclass"])):  
    if data["workclass"][row] == "Federal-gov" and data["income"][row] == "<=50K":
      federal_gov = federal_gov +1



# grafic

print("GRAFIC MENYS O IGUAL 50K EMPRESES")

x = ["Private","Local-gov","Self-emp-not-inc","State-gov","Federal-gov"]
y = [num_privats,locals,self_emp,state_gov,federal_gov]

plt.pie(y, labels=x, autopct="%0.1f %%")
plt.axis("equal")
plt.show()

#print(num_privats)
#print(locals)
#print(self_emp)
#print(state_gov)
#print(federal_gov)

print("")

#taula  empreses
print("TAULA Empresse")
data_table.enable_dataframe_formatter()

info =  [[num_privats,locals,self_emp,state_gov,federal_gov]]


col_names =  ["Private","Local-gov","Self-emp-not-inc","State-gov","Federal-gov"]

print(tabulate(info, headers = col_names))

#COSES DANIEL 

#edat 


from google.colab import data_table
from tabulate import tabulate
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd 
import numpy as np

data = pd.read_csv("adult_v1.csv")

ageRang_16_24 = 0
ageRang_25_34 = 0
ageRang_35_44 = 0
ageRang_45_54 = 0
ageRang_55_64 = 0
ageRang_65_74 = 0
ageRang_75_84 = 0

ageRang_16_24_mes = 0
ageRang_25_34_mes = 0
ageRang_35_44_mes = 0
ageRang_45_54_mes = 0
ageRang_55_64_mes = 0
ageRang_65_74_mes = 0
ageRang_75_84_mes = 0

for row in range(len(data["age"])):  
    if data["age"][row] >= 16 and data["age"][row] <= 24 and data["income"][row] == "<=50K":
      ageRang_16_24 = ageRang_16_24 + 1

for row in range(len(data["age"])):     
    if data["age"][row] >= 25 and data["age"][row] <= 34 and data["income"][row] == "<=50K":
      ageRang_25_34 = ageRang_25_34 + 1

for row in range(len(data["age"])):  
    if data["age"][row] >= 35 and data["age"][row] <= 44 and data["income"][row] == "<=50K":
      ageRang_35_44 = ageRang_35_44 + 1

for row in range(len(data["age"])):
    if data["age"][row] >= 45 and data["age"][row] <= 54 and data["income"][row] == "<=50K":
      ageRang_45_54 = ageRang_45_54 + 1

for row in range(len(data["age"])):
    if data["age"][row] >= 55 and data["age"][row] <= 64 and data["income"][row] == "<=50K":
      ageRang_55_64 = ageRang_55_64 + 1

for row in range(len(data["age"])):
    if data["age"][row] >= 65 and data["age"][row] <= 74 and data["income"][row] == "<=50K":
      ageRang_65_74 = ageRang_65_74 + 1

for row in range(len(data["age"])):
    if data["age"][row] >= 75 and data["age"][row] <= 84 and data["income"][row] == "<=50K":
      ageRang_75_84 = ageRang_75_84 + 1


#PERSONEES MES DE 50K
for row in range(len(data["age"])):  
    if data["age"][row] >= 16 and data["age"][row] <= 24 and data["income"][row] == ">50K":
      ageRang_16_24_mes = ageRang_16_24_mes + 1

for row in range(len(data["age"])):     
    if data["age"][row] >= 25 and data["age"][row] <= 34 and data["income"][row] == ">50K":
      ageRang_25_34_mes = ageRang_25_34_mes + 1

for row in range(len(data["age"])):  
    if data["age"][row] >= 35 and data["age"][row] <= 44 and data["income"][row] == ">50K":
      ageRang_35_44_mes = ageRang_35_44_mes + 1

for row in range(len(data["age"])):
    if data["age"][row] >= 45 and data["age"][row] <= 54 and data["income"][row] == ">50K":
      ageRang_45_54_mes = ageRang_45_54_mes + 1

for row in range(len(data["age"])):
    if data["age"][row] >= 55 and data["age"][row] <= 64 and data["income"][row] == ">50K":
      ageRang_55_64_mes = ageRang_55_64_mes + 1

for row in range(len(data["age"])):
    if data["age"][row] >= 65 and data["age"][row] <= 74 and data["income"][row] == ">50K":
      ageRang_65_74_mes = ageRang_65_74_mes + 1

for row in range(len(data["age"])):
    if data["age"][row] >= 75 and data["age"][row] <= 84 and data["income"][row] == ">50K":
      ageRang_75_84_mes = ageRang_75_84_mes + 1

tang = ["16-24","25-34","35-44","45-54","55-64","65-74","75-84"]
print("Barras edat menys o igual a 50K AND mes 50K: ")
menys50 = [ageRang_16_24,ageRang_25_34,ageRang_35_44,ageRang_45_54,ageRang_55_64,ageRang_65_74,ageRang_75_84]
mes50 = [ageRang_16_24_mes,ageRang_25_34_mes,ageRang_35_44_mes,ageRang_45_54_mes,ageRang_55_64_mes,ageRang_65_74_mes,ageRang_75_84_mes]

width = 0.30
x = np.arange(len(tang))
x1 = [y + width for y in x]
x2 = [y + width for y in x1]

fig, ax = plt.subplots()
bar1 = ax.bar(x,menys50, width,label = "<=50")
bar2 = ax.bar(x1,mes50, width,label = ">50")

ax.set_xticks(x)
ax.set_xticklabels(tang)
ax.legend()

plt.show()

#taula  >=50K
print("TAULA Menys igual 50k")
data_table.enable_dataframe_formatter()

info =  [[ageRang_16_24,ageRang_25_34,ageRang_35_44,ageRang_45_54,ageRang_55_64,ageRang_65_74,ageRang_75_84]]


col_names =  ["16-24","25-34","35-44","45-54","55-64","65-74","75-84"]

print(tabulate(info, headers = col_names))
print("")
print("")
#taula  mes 50K
print("TAULA MES  50k")
data_table.enable_dataframe_formatter()

info =  [[ageRang_16_24_mes,ageRang_25_34_mes,ageRang_35_44_mes,ageRang_45_54_mes,ageRang_55_64_mes,ageRang_65_74_mes,ageRang_75_84_mes]]


col_names =  ["16-24","25-34","35-44","45-54","55-64","65-74","75-84"]

print(tabulate(info, headers = col_names))

from google.colab import data_table
from tabulate import tabulate
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd 


# never married simple


data = pd.read_csv("adult_v1.csv")
marital_status = data["marital-status"].values
marital_status.sort()
maiCasats =0
marriedCIV =0
widowed = 0
separated=0
divorced= 0

for row in marital_status and :
  if row == 'Never-married':
    maiCasats = maiCasats +1
  elif row == 'Married-civ-spouse':
    marriedCIV = marriedCIV +1
  elif  row == 'Widowed':
    widowed = widowed +1
  elif row == 'Separated':
    separated = separated +1
  elif row == 'Divorced':
    divorced = divorced +1

x = ["Never-married","Married-ci-spouse","Widowed","Separated","Divorced"]
y = [maiCasats,marriedCIV,widowed,separated,divorced]

print("Barras")
plt.bar(x,y)
plt.show()





# grafic

print("grafic")

plt.pie(y, labels=x, autopct="%0.1f %%")
plt.axis("equal")
plt.show()

print("TAULA")
data_table.enable_dataframe_formatter()

info =  [[maiCasats,marriedCIV,widowed,separated,divorced]]


col_names = ["Never-married","Married-ci-spouse","Widowed","Separated","Divorced"]

print(tabulate(info, headers = col_names))

# sexe
from google.colab import data_table
from tabulate import tabulate
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd 
import numpy as np
data = pd.read_csv("adult_v1.csv")

male = 0
female = 0
male_mes = 0
female_mes = 0

for row in range(len(data["gender"])):
    if data["gender"][row] == "Male" and data["income"][row] == "<=50K":
      male = male + 1

for row in range(len(data["gender"])):
    if data["gender"][row] == "Female" and data["income"][row] == "<=50K":
      female = female + 1


#PERSONEES MES DE 50K
for row in range(len(data["gender"])):
    if data["gender"][row] == "Male" and data["income"][row] == ">50K":
      male_mes = male_mes + 1

for row in range(len(data["gender"])):
    if data["gender"][row] == "Female" and data["income"][row] == ">50K":
      female_mes = female_mes + 1

print("Quesitos Sexe Menys/igual 50k")
x = ["Male","Female"]
y = [male,female]
plt.pie(y, labels=x, autopct="%0.1f %%")
plt.axis("equal")
plt.show()

print("Quesitos Sexe mes de 50k")
x1 = ["Male","Female"]
y1 = [male_mes,female_mes]
plt.pie(y1, labels=x1, autopct="%0.1f %%")
plt.axis("equal")
plt.show()

#taula  >=50K
print("TAULA Menys igual 50k")
data_table.enable_dataframe_formatter()

info =  [[male,female]]


col_names =  ["Male","Female"]

print(tabulate(info, headers = col_names))
print("")
print("")
#taula  mes 50K
print("TAULA MES  50k")
data_table.enable_dataframe_formatter()

info =  [[male_mes,female_mes]]


col_names =  ["Male","Female"]

print(tabulate(info, headers = col_names))

#OCUPATION 

machine_op_inspct = 0
farming_fishing = 0
protective_serv=0
prof_speciality =0

other_service =0
craft_repair =0
adm_clerical =0

exec_managerial=0
tech_support =0
sales =0

handlers_cleaners =0
priv_house_serv =0
transport_moving =0


# MENYSSS <=50K

for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Machine-op-inspct" and data["income"][row] == "<=50K":
      machine_op_inspct = machine_op_inspct +1

      
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Farming-fishing" and data["income"][row] == "<=50K":
      protective_serv = protective_serv +1

#Protective-serv
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Protective-serv" and data["income"][row] == "<=50K":
      protective_serv = protective_serv +1


#prof_speciality
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Prof-speciality" and data["income"][row] == "<=50K":
      prof_speciality = prof_speciality +1

      
#other service
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Other-service" and data["income"][row] == "<=50K":
      other_service = other_service +1

#crafter 
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Craft-repair" and data["income"][row] == "<=50K":
      craft_repair = craft_repair +1

#adm_clerical
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Adm-clerical" and data["income"][row] == "<=50K":
      adm_clerical = adm_clerical +1


#exec_managerial
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Exec-managerial" and data["income"][row] == "<=50K":
      exec_managerial = exec_managerial +1



#tech_support
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Tech-support" and data["income"][row] == "<=50K":
      tech_support = tech_support +1


#sales
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Sales" and data["income"][row] == "<=50K":
      sales = sales +1


#handlers_cleaners
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Handlers-cleaners" and data["income"][row] == "<=50K":
      handlers_cleaners = handlers_cleaners +1


#priv_house_serv
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Priv-house-serv" and data["income"][row] == "<=50K":
      priv_house_serv = priv_house_serv +1

#transport_moving
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Transport-moving" and data["income"][row] == "<=50K":
      transport_moving = transport_moving +1


x = ["Machine-op-inspct","Farming-fishing","Protective-serv","Prof-speciality","Other-service","Craft-repair","Adm-clerical","Exec-managerial","Tech-support","Sales","Handlers-cleaners","Priv-house-serv","Transport-moving"]
y = [machine_op_inspct,farming_fishing,protective_serv,prof_speciality,other_service,craft_repair,adm_clerical,exec_managerial,tech_support,sales,handlers_cleaners,priv_house_serv,transport_moving]


# grafic OCUPACIO

print("Grafic OCUPACIO <=50k")

plt.pie(y, labels=x, autopct="%0.1f %%")
plt.axis("equal") 
plt.show()


#MES 50 K



for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Machine-op-inspct" and data["income"][row] == ">50K":
      machine_op_inspct = machine_op_inspct +1

      
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Farming-fishing" and data["income"][row] == ">50K":
      protective_serv = protective_serv +1

#Protective-serv
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Protective-serv" and data["income"][row] == ">50K":
      protective_serv = protective_serv +1


#prof_speciality
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Prof-speciality" and data["income"][row] == ">50K":
      prof_speciality = prof_speciality +1

      
#other service
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Other-service" and data["income"][row] == ">50K":
      other_service = other_service +1

#crafter 
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Craft-repair" and data["income"][row] == ">50K":
      craft_repair = craft_repair +1

#adm_clerical
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Adm-clerical" and data["income"][row] == ">50K":
      adm_clerical = adm_clerical +1


#exec_managerial
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Exec-managerial" and data["income"][row] == ">50K":
      exec_managerial = exec_managerial +1



#tech_support
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Tech-support" and data["income"][row] == ">50K":
      tech_support = tech_support +1


#sales
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Sales" and data["income"][row] == ">50K":
      sales = sales +1


#handlers_cleaners
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Handlers-cleaners" and data["income"][row] == ">50K":
      handlers_cleaners = handlers_cleaners +1


#priv_house_serv
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Priv-house-serv" and data["income"][row] == ">50K":
      priv_house_serv = priv_house_serv +1

#transport_moving
for row in range(len(data["occupation"])):  
    if data["occupation"][row] == "Transport-moving" and data["income"][row] == ">50K":
      transport_moving = transport_moving +1


x = ["Machine-op-inspct","Farming-fishing","Protective-serv","Prof-speciality","Other-service","Craft-repair","Adm-clerical","Exec-managerial","Tech-support","Sales","Handlers-cleaners","Priv-house-serv","Transport-moving"]
y = [machine_op_inspct,farming_fishing,protective_serv,prof_speciality,other_service,craft_repair,adm_clerical,exec_managerial,tech_support,sales,handlers_cleaners,priv_house_serv,transport_moving]


# grafic OCUPACIO

print()
print("Grafic OCUPACIO >50k")

plt.pie(y, labels=x, autopct="%0.1f %%")
plt.axis("equal") 
plt.show()

# education



from google.colab import data_table
from tabulate import tabulate
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd 
import numpy as np
data = pd.read_csv("adult_v1.csv")

score_0_4 = 0
score_5_7 = 0
score_8_10 = 0
score_11_15 = 0

score_0_4_mes = 0
score_5_7_mes = 0
score_8_10_mes = 0
score_11_15_mes = 0

for row in range(len(data["educational-num"])):  
    if data["educational-num"][row] >= 0 and data["educational-num"][row] <= 4 and data["income"][row] == "<=50K":
      score_0_4 = score_0_4 + 1

for row in range(len(data["educational-num"])):     
    if  data["educational-num"][row] >= 5 and data["educational-num"][row] <= 7 and data["income"][row] == "<=50K":
      score_5_7 = score_5_7 + 1

for row in range(len(data["educational-num"])):     
    if  data["educational-num"][row] >= 8 and data["educational-num"][row] <= 10 and data["income"][row] == "<=50K":
      score_8_10 = score_8_10 + 1

for row in range(len(data["educational-num"])):     
    if  data["educational-num"][row] >= 11 and data["educational-num"][row] <= 15 and data["income"][row] == "<=50K":
      score_11_15 = score_11_15 + 1


#PERSONEES MES DE 50K
for row in range(len(data["educational-num"])):  
    if data["educational-num"][row] >= 0 and data["educational-num"][row] <= 4 and data["income"][row] == ">50K":
      score_0_4_mes = score_0_4_mes + 1

for row in range(len(data["educational-num"])):     
    if  data["educational-num"][row] >= 5 and data["educational-num"][row] <= 7 and data["income"][row] == ">50K":
      score_5_7_mes = score_5_7_mes + 1

for row in range(len(data["educational-num"])):     
    if  data["educational-num"][row] >= 8 and data["educational-num"][row] <= 10 and data["income"][row] == ">50K":
      score_8_10_mes = score_8_10_mes + 1

for row in range(len(data["educational-num"])):     
    if  data["educational-num"][row] >= 11 and data["educational-num"][row] <= 15 and data["income"][row] == ">50K":
      score_11_15_mes = score_11_15_mes + 1

tang = ["0-4","5-7","8-10","11-15"]
print("Barras nota educativa. Cobren menys o igual a 50K o mes 50K: ")
menys50 = [score_0_4,score_5_7,score_8_10,score_11_15]
mes50 = [score_0_4_mes,score_5_7_mes,score_8_10_mes,score_11_15_mes]

width = 0.30
x = np.arange(len(tang))
x1 = [y + width for y in x]
x2 = [y + width for y in x1]

fig, ax = plt.subplots()
bar1 = ax.bar(x,menys50, width,label = "<=50")
bar2 = ax.bar(x1,mes50, width,label = ">50")

ax.set_xticks(x)
ax.set_xticklabels(tang)
ax.legend()

plt.show()

#taula  >=50K
print("TAULA Menys igual 50k")
data_table.enable_dataframe_formatter()

info =  [[score_0_4,score_5_7,score_8_10,score_11_15]]


col_names = ["0-4","5-7","8-10","11-15"]

print(tabulate(info, headers = col_names))
print("")
print("")
#taula  mes 50K
print("TAULA MES  50k")
data_table.enable_dataframe_formatter()

info =  [[score_0_4_mes,score_5_7_mes,score_8_10_mes,score_11_15_mes]]


col_names =  ["0-4","5-7","8-10","11-15"]
print(tabulate(info, headers = col_names))

#ralationship


from google.colab import data_table
from tabulate import tabulate
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd 
import numpy as np
data = pd.read_csv("adult_v1.csv")

own_child = 0
husband = 0
not_in_family = 0
unmarried = 0
wife = 0

own_child_mes = 0
husband_mes = 0
not_in_family_mes = 0
unmarried_mes = 0
wife_mes = 0

for row in range(len(data["relationship"])):  
    if data["relationship"][row] == "Own-child" and data["income"][row] == "<=50K":
      own_child = own_child + 1

for row in range(len(data["relationship"])):     
    if data["relationship"][row] == "Husband" and data["income"][row] == "<=50K":
      husband = husband + 1

for row in range(len(data["relationship"])):  
    if data["relationship"][row] == "Not-in-family" and data["income"][row] == "<=50K":
      not_in_family = not_in_family + 1

for row in range(len(data["relationship"])):
    if data["relationship"][row] == "Unmarried" and data["income"][row] == "<=50K":
      unmarried = unmarried + 1

for row in range(len(data["relationship"])):
    if data["relationship"][row] == "Wife" and data["income"][row] == "<=50K":
      wife = wife + 1


#PERSONEES MES DE 50K
for row in range(len(data["relationship"])):  
    if data["relationship"][row] == "Own-child" and data["income"][row] == ">50K":
      own_child_mes = own_child_mes + 1

for row in range(len(data["relationship"])):     
    if data["relationship"][row] == "Husband" and data["income"][row] == ">50K":
      husband_mes = husband_mes + 1

for row in range(len(data["relationship"])):  
    if data["relationship"][row] == "Not-in-family" and data["income"][row] == ">50K":
      not_in_family_mes = not_in_family_mes + 1

for row in range(len(data["relationship"])):
    if data["relationship"][row] == "Unmarried" and data["income"][row] == ">50K":
      unmarried_mes = unmarried_mes + 1

for row in range(len(data["relationship"])):
    if data["relationship"][row] == "Wife" and data["income"][row] == ">50K":
      wife_mes = wife_mes + 1


tang = ["Own-child","Husband","Not-in-family","Unmarried","Wife"]
print("Barras de relacio segons cobri menys o igual a 50K o mes 50K: ")
menys50 = [own_child,husband,not_in_family,unmarried,wife]
mes50 = [own_child_mes,husband_mes,not_in_family_mes,unmarried_mes,wife_mes]

width = 0.30
x = np.arange(len(tang))
x1 = [y + width for y in x]
x2 = [y + width for y in x1]

fig, ax = plt.subplots()
bar1 = ax.bar(x,menys50, width,label = "<=50")
bar2 = ax.bar(x1,mes50, width,label = ">50")

ax.set_xticks(x)
ax.set_xticklabels(tang)
ax.legend()

plt.show()

#taula  >=50K
print("TAULA Menys igual 50k")
data_table.enable_dataframe_formatter()

info =  [[own_child,husband,not_in_family,unmarried,wife]]


col_names =  ["Own-child","Husband","Not-in-family","Unmarried","Wife"]

print(tabulate(info, headers = col_names))
print("")
print("")
#taula  mes 50K
print("TAULA MES  50k")
data_table.enable_dataframe_formatter()

info =  [[own_child_mes,husband_mes,not_in_family_mes,unmarried_mes,wife_mes]]


col_names =  ["Own-child","Husband","Not-in-family","Unmarried","Wife"]

print(tabulate(info, headers = col_names))